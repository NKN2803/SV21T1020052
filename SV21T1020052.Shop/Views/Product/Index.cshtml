@model ProductModel
@{
    ViewData["Title"] = "Sản phẩm";
}

<div class="shop-container">
    <div class="shop-layout">
        <!-- Sidebar -->
        <div class="shop-sidebar">
            @await Html.PartialAsync("_Sidebar", Model)
        </div>

        <!-- Main -->
        <div class="shop-main">
            <form id="filter-form" method="get" action="@Url.Action("Index", "Product")">
                <input type="hidden" name="Page" value="1" />
                <input type="hidden" name="PageSize" value="@Model.SearchInput.PageSize" />
                <input type="hidden" name="CategoryID" value="@Model.SearchInput.CategoryID" />

                <!-- Bộ lọc -->
                <div class="filter-bar">
                    <div class="filter-group">
                        <label>Giá:</label>
                        <div class="price-inputs">
                            <input type="text" oninput="formatPrice(this)" name="MinPrice" value="@Model.SearchInput.MinPrice" placeholder="Từ..." />
                            <span>-</span>
                            <input type="text" oninput="formatPrice(this)" name="MaxPrice" value="@Model.SearchInput.MaxPrice" placeholder="Đến..." />
                        </div>
                    </div>

                    <div class="filter-group">
                        <label>Sắp xếp:</label>
                        <select name="SortOrder" onchange="this.form.submit()" class="form-select">
                            <option value="default" selected="@(Model.SearchInput.SortOrder == "default" ? "selected" : null)">Mặc định</option>
                            <option value="price_asc" selected="@(Model.SearchInput.SortOrder == "price_asc" ? "selected" : null)">Giá tăng dần</option>
                            <option value="price_desc" selected="@(Model.SearchInput.SortOrder == "price_desc" ? "selected" : null)">Giá giảm dần</option>
                            <option value="name_asc" selected="@(Model.SearchInput.SortOrder == "name_asc" ? "selected" : null)">Tên A-Z</option>
                            <option value="name_desc" selected="@(Model.SearchInput.SortOrder == "name_desc" ? "selected" : null)">Tên Z-A</option>
                        </select>
                    </div>

                    <div class="filter-actions">
                        <button type="submit" id="submitButton" class="btn-filter">
                            <i class="fas fa-filter"></i> Lọc
                        </button>
                        @if (Model.SearchInput.MinPrice > 0 || Model.SearchInput.MaxPrice > 0 || Model.SearchInput.SortOrder != "default")
                        {
                            <a href="@Url.Action("Index", "Product", new { categoryId = Model.SearchInput.CategoryID })"
                               class="btn-clear">
                                <i class="fas fa-times"></i> Xóa bộ lọc
                            </a>
                        }
                    </div>
                </div>

                <!-- Danh sách sản phẩm -->
                <div class="shop-products-grid">
                    @foreach (var product in Model.Products)
                    {
                        <div class="shop-product-card">
                            <a href="@Url.Action("Detail", "Product", new { id = product.ProductID })" class="shop-product-link">
                                <div class="shop-product-image-wrapper">
                                    <img src="@(string.IsNullOrEmpty(product.Photo) ? "/themes/dist/img/nophoto.jpg" : product.Photo)"
                                         alt="@product.ProductName" class="shop-product-image">
                                </div>
                                <div class="shop-product-info">
                                    <h3 class="shop-product-title">@product.ProductName</h3>
                                    <p class="shop-product-description">@product.ProductDescription</p>
                                    <div class="shop-product-price">@product.Price.ToString("#,0") đ</div>
                                </div>
                            </a>
                            <div class="shop-product-actions">
                                <button type="button" class="shop-cart-button" data-product-id="@product.ProductID">
                                    <i class="fas fa-shopping-cart"></i>
                                    Thêm vào giỏ
                                </button>
                            </div>
                        </div>
                    }
                </div>

                <!-- Phân trang -->
                @if (Model.TotalPages > 1)
                {
                    <div class="shop-pagination">
                        @if (Model.SearchInput.Page > 1)
                        {
                            <a href="@Url.Action("Index", "Product", new {
                                page = Model.SearchInput.Page - 1,
                                pageSize = Model.DefaultPageSize,
                                searchValue = Model.SearchInput.SearchValue,
                                CategoryID = Model.SearchInput.CategoryID,
                                MinPrice = Model.SearchInput.MinPrice,
                                MaxPrice = Model.SearchInput.MaxPrice,
                                SortOrder = Model.SearchInput.SortOrder
                            })" class="pagination-item">&laquo;</a>
                        }

                        @{
                            const int maxPagesShow = 10;
                            var startPage = Math.Max(1, Model.SearchInput.Page - 4);
                            var endPage = Math.Min(Model.TotalPages, startPage + maxPagesShow - 1);
                        }

                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <a href="@Url.Action("Index", "Product", new {
                                page = i,
                                pageSize = Model.DefaultPageSize,
                                searchValue = Model.SearchInput.SearchValue,
                                CategoryID = Model.SearchInput.CategoryID,
                                MinPrice = Model.SearchInput.MinPrice,
                                MaxPrice = Model.SearchInput.MaxPrice,
                                SortOrder = Model.SearchInput.SortOrder
                            })" class="pagination-item @(Model.SearchInput.Page == i ? "active" : "")">@i</a>
                        }

                        @if (Model.SearchInput.Page < Model.TotalPages)
                        {
                            <a href="@Url.Action("Index", "Product", new {
                                page = Model.SearchInput.Page + 1,
                                pageSize = Model.DefaultPageSize,
                                searchValue = Model.SearchInput.SearchValue,
                                CategoryID = Model.SearchInput.CategoryID,
                                MinPrice = Model.SearchInput.MinPrice,
                                MaxPrice = Model.SearchInput.MaxPrice,
                                SortOrder = Model.SearchInput.SortOrder
                            })" class="pagination-item">&raquo;</a>
                        }
                    </div>
                }
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.shop-cart-button').click(function (e) {
                e.preventDefault();
                var button = $(this);
                var productId = button.data('product-id');
                button.prop('disabled', true);
                button.html('<i class="fas fa-spinner fa-spin"></i> Đang thêm...');

                $.ajax({
                    url: '@Url.Action("AddToCart", "Product")',
                    type: 'POST',
                    data: { productId: productId, quantity: 1 },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Thành công!',
                                text: response.message,
                                showConfirmButton: false,
                                timer: 1500
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi!',
                            text: 'Có lỗi xảy ra khi thêm vào giỏ hàng!'
                        });
                    },
                    complete: function () {
                        button.prop('disabled', false);
                        button.html('<i class="fas fa-shopping-cart"></i> Thêm vào giỏ');
                    }
                });
            });
        });

        function formatPrice(input) {
            input.value = input.value.replace(/\D/g, '');
        }
    </script>
}
<style>
    .shop-container {
    display: flex;
    justify-content: center;
    padding: 40px 20px;
    background-color: #f9f9f9;
}

.shop-layout {
    display: flex;
    flex-wrap: wrap;
    max-width: 1200px;
    width: 100%;
    gap: 20px;
}

/* Sidebar */
.shop-sidebar {
    width: 280px;
    padding: 20px;
    background-color: #fff;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    border-radius: 10px;
}

/* Main */
.shop-main {
    flex: 1;
}

/* Bộ lọc */
.filter-bar {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 20px;
    margin-bottom: 25px;
    padding: 15px;
    background-color: #fff;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    border-radius: 10px;
}

.filter-group label {
    font-weight: 600;
    color: #333;
    display: block;
    margin-bottom: 5px;
}

.price-inputs {
    display: flex;
    align-items: center;
    gap: 10px;
}

.price-inputs input {
    width: 100px;
    padding: 8px;
    font-size: 14px;
    border: 1px solid #ddd;
    border-radius: 6px;
}

.filter-actions {
    display: flex;
    align-items: center;
    gap: 10px;
}

.btn-filter {
    background-color: #4c51bf;
    color: white;
    padding: 10px 20px;
    border-radius: 25px;
    font-weight: bold;
    display: flex;
    align-items: center;
    gap: 8px;
    border: none;
    cursor: pointer;
    transition: background 0.3s ease;
}

.btn-filter:hover {
    background-color: #3b3e98;
}

.btn-clear {
    font-size: 14px;
    color: #e94560;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 5px;
}

.btn-clear:hover {
    text-decoration: underline;
}

/* Sản phẩm */
.shop-products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
}

.shop-product-card {
    background-color: #fff;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    padding: 15px;
    text-align: center;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.shop-product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
}

.shop-product-link {
    text-decoration: none;
    color: inherit;
}

.shop-product-image-wrapper {
    width: 100%;
    height: 200px;
    margin-bottom: 15px;
    overflow: hidden;
    border-radius: 10px;
}

.shop-product-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.shop-product-card:hover .shop-product-image {
    transform: scale(1.05);
}

.shop-product-title {
    font-size: 16px;
    font-weight: 600;
    color: #333;
    margin-bottom: 5px;
}

.shop-product-description {
    font-size: 14px;
    color: #777;
    margin-bottom: 8px;
}

.shop-product-price {
    font-size: 18px;
    font-weight: 700;
    color: #e94560;
}

.shop-product-actions {
    margin-top: 10px;
}

.shop-cart-button {
    background-color: #4c51bf;
    color: white;
    border: none;
    padding: 10px;
    width: 100%;
    border-radius: 25px;
    font-weight: 600;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
    transition: background 0.3s ease;
}

.shop-cart-button:hover {
    background-color: #3b3e98;
}

/* Phân trang */
.shop-pagination {
    display: flex;
    justify-content: center;
    margin-top: 30px;
    gap: 10px;
}

.pagination-item {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: #fff;
    border: 1px solid #ddd;
    color: #333;
    font-weight: bold;
    text-decoration: none;
    transition: all 0.3s ease;
}

.pagination-item:hover,
.pagination-item.active {
    background-color: #4c51bf;
    color: white;
    border-color: #4c51bf;
}


</style>